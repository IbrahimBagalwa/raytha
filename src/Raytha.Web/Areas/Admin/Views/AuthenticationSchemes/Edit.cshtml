@model AuthenticationSchemesEdit_ViewModel
@{
    ViewData["Title"] = "Authentication schemes > Edit authentication scheme";
}

@(await Html.PartialAsync("_PageHeader", new PageHeader_ViewModel
{
    Title = ViewData["Title"].ToString(),
}))

<div class="row mb-4">
    <div class="col-xxl-7 col-xl-8 col-lg-9 col-md-12">
        <div class="card border-0 shadow mb-4">
            <div class="card-body">
                @(await Html.PartialAsync("_BackToList", "authenticationschemesindex"))
                <form asp-route="authenticationschemesedit" method="post" class="py-4">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label raytha-required" asp-for="Label"></label>
                            <input type="text" class="form-control @Model.HasError("Label")" asp-for="Label" required>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("Label")</div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" asp-for="DeveloperName"></label>
                            <input type="text" class="form-control @Model.HasError("DeveloperName")"
                                asp-for="DeveloperName" readonly>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("DeveloperName")</div>
                        </div>
                    </div>
                    <div class="col-lg-12 my-4">
                        <div class="form-check">
                            <input class="form-check-input @Model.HasError("IsEnabledForUsers")" type="checkbox" asp-for="IsEnabledForUsers"> 
                            <label class="form-check-label" asp-for="IsEnabledForUsers"></label>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("IsEnabledForUsers")</div>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input @Model.HasError("IsEnabledForAdmins")" type="checkbox" asp-for="IsEnabledForAdmins"> 
                            <label class="form-check-label" asp-for="IsEnabledForAdmins"></label>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("IsEnabledForAdmins")</div>
                        </div>  
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" asp-for="AuthenticationSchemeType"></label>
                            <select class="form-select @Model.HasError("AuthenticationSchemeType")"
                                asp-for="AuthenticationSchemeType" asp-items="Model.SupportedAuthenticationSchemeTypes" disabled>
                            </select>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("AuthenticationSchemeType")</div>
                        </div>
                    </div>
                    @if (Model.AuthenticationSchemeType == "magic_link")
                    {
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="MagicLinkExpiresInSeconds"></label>
                                <input type="number" class="form-control @Model.HasError("MagicLinkExpiresInSeconds")"
                                asp-for="MagicLinkExpiresInSeconds" , max="604800" , min="30">
                                <div class="invalid-feedback">@Model.ErrorMessageFor("MagicLinkExpiresInSeconds")</div>
                                <div class="form-text">Default is 15 minutes. Choose a value between 30 seconds and 604800
                                    seconds (1 week).</div>
                            </div>
                        </div>
                    }
                    @if (Model.AuthenticationSchemeType == "jwt")
                    {
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="JwtSecretKey"></label>
                                <input type="text" class="form-control @Model.HasError("JwtSecretKey")"
                                asp-for="JwtSecretKey">
                                <div class="invalid-feedback">@Model.ErrorMessageFor("JwtSecretKey")</div>
                            </div>
                        </div>
                        <div class="col-lg-12 my-4">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" asp-for="JwtUseHighSecurity">
                                <label class="form-check-label @Model.HasError("JwtUseHighSecurity")"
                                asp-for="JwtUseHighSecurity"></label>
                                <div class="invalid-feedback">@Model.ErrorMessageFor("JwtUseHighSecurity")</div>
                                <div class="form-text">Only enable this if you are able to implement the <code>jti</code> claim as part of the JWT payloads.</div>
                            </div>
                        </div>
                    }
                    else if (Model.AuthenticationSchemeType == "saml")
                    {
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="SamlCertificate"></label>
                                <textarea class="form-control @Model.HasError("SamlCertificate")" asp-for="SamlCertificate"
                                rows="20"></textarea>
                                <div class="invalid-feedback">@Model.ErrorMessageFor("SamlCertificate")</div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="SamlIdpEntityId"></label>
                                <input type="text" class="form-control @Model.HasError("SamlIdpEntityId")"
                                asp-for="SamlIdpEntityId">
                                <div class="invalid-feedback">@Model.ErrorMessageFor("SamlIdpEntityId")</div>
                            </div>
                        </div>
                    }
                    @if (Model.AuthenticationSchemeType == "jwt" || Model.AuthenticationSchemeType == "saml")
                    {
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="SignInUrl"></label>
                                <input type="url" class="form-control @Model.HasError("SignInUrl")" asp-for="SignInUrl" required>
                                <div class="invalid-feedback">@Model.ErrorMessageFor("SignInUrl")</div>
                                <div class="form-text">Redirect users to this url to login on your authentication platform.
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <label class="form-label" asp-for="SignOutUrl"></label>
                                <input type="url" class="form-control @Model.HasError("SignOutUrl")" asp-for="SignOutUrl">
                                <div class="invalid-feedback">@Model.ErrorMessageFor("SignOutUrl")</div>
                                <div class="form-text">Users will be redirected to this url after being logged out here.
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label raytha-required" asp-for="LoginButtonText"></label>
                            <input type="text" class="form-control @Model.HasError("LoginButtonText")"
                                asp-for="LoginButtonText" required>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("LoginButtonText")</div>
                        </div>
                    </div>

                    <input type="hidden" asp-for="Id">
                    <input type="hidden" asp-for="IsBuiltInAuth">
                    <input type="hidden" asp-for="AuthenticationSchemeType">
                    <button type="submit" class="btn btn-success mt-4">Save changes</button>
                </form>
            </div>
        </div>
    </div>
    @(await Html.PartialAsync("_ActionsMenu", new AuthenticationSchemesActionsMenu_ViewModel
    {
        Id = Model.Id,
        IsBuiltInAuth = Model.IsBuiltInAuth
    }))
</div>