@model WebTemplatesCreate_ViewModel
@{
    ViewData["Title"] = "Web templates > Create template";
}

@(await Html.PartialAsync("_PageHeader", new PageHeader_ViewModel
{
    Title = ViewData["Title"].ToString(),
}))

<div class="row mb-4" data-controller="templates--isbaselayout shared--developername">
    <div class="col-xxl-7 col-xl-8 col-lg-9 col-md-12">
        <div class="card border-0 shadow mb-4">
            <div class="card-body">
                @(await Html.PartialAsync("_BackToList", "webtemplatesindex"))
                <form asp-route="webtemplatescreate" method="post" class="py-4">
                    <div class="col-lg-12 col-md-12">
                        <div class="mb-3">
                            <label class="form-label raytha-required" asp-for="Label"></label>
                            <input type="text" class="form-control @Model.HasError("Label")" asp-for="Label" required
                                data-shared--developername-target="label"
                                data-action="keyup->shared--developername#setDeveloperName change->shared--developername#setDeveloperName">
                            <div class="invalid-feedback">@Model.ErrorMessageFor("Label")</div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" asp-for="DeveloperName"></label>
                            <input type="text" class="form-control @Model.HasError("DeveloperName")"
                                asp-for="DeveloperName" required data-shared--developername-target="developername">
                            <div class="invalid-feedback">@Model.ErrorMessageFor("DeveloperName")</div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12">
                        <div class="mb-3">
                            <label class="form-label" asp-for="ParentTemplateId"></label>
                            <select class="form-select @Model.HasError("ParentTemplateId")" asp-for="ParentTemplateId" asp-items="@(new SelectList(Model.ParentTemplates, "Key", "Value"))">     
                                <option value="">(none)</option>
                            </select>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("ParentTemplateId")</div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 my-4">
                        <div class="form-check">
                            <input data-templates--isbaselayout-target="isBaseLayout" class="form-check-input" type="checkbox" asp-for="IsBaseLayout" data-action="change->templates--isbaselayout#toggleBaseLayoutInstructions"> 
                            <label class="form-check-label" asp-for="IsBaseLayout"></label>
                        </div>
                        <div class="form-text" data-templates--isbaselayout-target="isBaseLayoutInstructions">Base layouts require the use of <code>{% renderbody %}</code> in the template. This tag will be replaced by the content in child templates.</div>
                    </div>
                    <div class="col-lg-12 col-md-12 my-4" data-templates--isbaselayout-target="templateAccessList">
                        <div class="mb-3">
                            <label class="form-label" asp-for="@Model.TemplateAccessToModelDefinitions"></label>
                            @for (int i = 0; i < Model.TemplateAccessToModelDefinitions.Count(); i++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input @Model.HasError("TemplateAccessToModelDefinitions")" type="checkbox" asp-for="@Model.TemplateAccessToModelDefinitions[i].Value">
                                    <input type="hidden" asp-for="@Model.TemplateAccessToModelDefinitions[i].Id" />
                                    <input type="hidden" asp-for="@Model.TemplateAccessToModelDefinitions[i].Key" />
                                    <label class="form-check-label" asp-for="@Model.TemplateAccessToModelDefinitions[i].Value">@Model.TemplateAccessToModelDefinitions[i].Key</label>
                                    @if (i == Model.TemplateAccessToModelDefinitions.Length - 1)
                                    {
                                        <div class="invalid-feedback">@Model.ErrorMessageFor("TemplateAccessToModelDefinitions")</div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 my-4" data-templates--isbaselayout-target="allowAccessForNewContentTypes">
                        <div class="form-check">
                            <input class="form-check-input @Model.HasError("AllowAccessForNewContentTypes")" type="checkbox" asp-for="AllowAccessForNewContentTypes">
                            <label class="form-check-label" asp-for="AllowAccessForNewContentTypes"></label>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("AllowAccessForNewContentTypes")</div>
                         </div>
                        <div class="form-text">At least 1 non base layout template must be available for new content types.</div>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label raytha-required" asp-for="Content"></label><br/>
                            <button class="btn btn-sm btn-secondary mb-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#insertvariablemenu" aria-controls="insertvariablemenu">Insert variable</button>
                            <textarea class="form-control @Model.HasError("Content")" asp-for="Content" rows="50"></textarea>
                            <div class="invalid-feedback">@Model.ErrorMessageFor("Content")</div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-success mt-4">Publish changes</button>
                </form>
            </div>
        </div>
    </div>
</div>
<partial name="_InsertVariableMenu.cshtml" model="Model.TemplateVariables" />