@    using Microsoft.AspNetCore.Authorization
@    using Raytha.Domain.Entities
@    using Raytha.Web.Utils;
    using Raytha.Web.Authentication;
@inject IAuthorizationService AuthorizationService

@model ViewsPagination_ViewModel
@{
    ViewData["Title"] = $"{Model.CurrentView.ContentTypeLabelPlural} > Views";
}

@(await Html.PartialAsync("_PageHeader", new PageHeader_ViewModel
{
    Title = ViewData["Title"].ToString(),
    Description = Model.CurrentView.ContentTypeDescription
}))

<ul class="nav nav-tabs">
  <li class="nav-item dropdown">
    <a class="nav-link active" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false"><svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg> Views</a>
  </li>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.CurrentView.ContentTypeDeveloperName, Operations.Config)).Succeeded)
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false"><svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path></svg> Settings             <svg class="icon icon-xs" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-route="contenttypesconfiguration" asp-route-contentType="@Model.CurrentView.ContentTypeDeveloperName"><svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg> Configuration</a></li>
                <li><a class="dropdown-item" asp-route="contenttypesfieldslist" asp-route-contentType="@Model.CurrentView.ContentTypeDeveloperName"><svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path></svg> Fields</a></li>
                <li><a class="dropdown-item" asp-route="contenttypesdeletedcontentitemslist" asp-route-contentType="@Model.CurrentView.ContentTypeDeveloperName"><svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg> Deleted @Model.CurrentView.ContentTypeLabelPlural.ToLower()</a></li>
            </ul>
        </li>
    }

</ul>


<nav class="navbar navbar-expand-lg navbar-light raytha-view-nav">
    <div class="container-fluid mx-2">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                @if ((await AuthorizationService.AuthorizeAsync(User, Model.CurrentView.ContentTypeDeveloperName, Operations.Edit)).Succeeded)
                {
                    <li class="nav-item">
                        <a class="btn btn-primary" aria-current="page" asp-route="viewscreate" asp-route-contentType="@Model.CurrentView.ContentTypeDeveloperName">
                            <svg class="icon icon-xs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg> Create view
                        </a>
                    </li>
                }
            </ul>

            <form class="d-flex" asp-action="@Model.ActionName" method="get">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" name="search" value="@Model.Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>
</nav>

<div class="raytha-data-card mb-4">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-centered table-nowrap mb-0 rounded">
                <thead class="thead-light">
                    <tr>
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel()
                        {
                            Model = Model,
                            PropertyName = "Label",
                            IsFirst = true,
                            DisplayName = ViewModelExtensions.GetDisplayName<ViewsListItem_ViewModel>(p => p.Label)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel()
                        {
                            Model = Model,
                            PropertyName = "DeveloperName",
                        IsFirst = false,
                            DisplayName = ViewModelExtensions.GetDisplayName<ViewsListItem_ViewModel>(p => p.DeveloperName)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel()
                        {
                            Model = Model,
                            PropertyName = "IsPublished",
                            IsFirst = false,
                            DisplayName = ViewModelExtensions.GetDisplayName<ViewsListItem_ViewModel>(p => p.IsPublished)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel()
                        {
                            Model = Model,
                            PropertyName = "RoutePath",
                            IsFirst = false,
                            DisplayName = ViewModelExtensions.GetDisplayName<ViewsListItem_ViewModel>(p => p.RoutePath)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel()
                        {
                            Model = Model,
                            PropertyName = "LastModificationTime",
                            IsFirst = false,
                            DisplayName = ViewModelExtensions.GetDisplayName<ViewsListItem_ViewModel>(p => p.LastModificationTime)
                        }))
                        <th class="border-0">
                            Last modified by
                        </th>
                        <th class="border-0 rounded-end">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                @if (item.IsFavoriteForAdmin)
                                {
                                    <svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path></svg> 
                                }
                                @item.Label
                            </td>
                            <td>@item.DeveloperName</td>
                            <td>@item.IsPublished</td>
                            <td>@item.RoutePath</td>
                            <td>@item.LastModificationTime</td>
                            <td>@item.LastModifierUser</td>
                            <td><a asp-route="contentitemsindex" asp-route-contentType="@Model.CurrentView.ContentTypeDeveloperName" asp-route-viewId="@item.Id">Open</a></td>
                        </tr>
                    }
                </tbody>
            </table>
            <partial name="_TablePagination" model="Model" />
        </div>
    </div>
</div>