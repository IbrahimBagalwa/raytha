@model UsersEdit_ViewModel
@{
    ViewData["Title"] = "Users > Edit user";
    ViewData["ActiveSubMenu"] = "Edit";
}

@(await Html.PartialAsync("_PageHeader", new PageHeader_ViewModel
{
    Title = ViewData["Title"].ToString(),
}))

@if (Model.IsAdmin)
{
    <div class="row">
        <div class="col-12">
            <div class="alert alert-warning alert-dismissible fade show mt-2 col-lg-6" role="alert">
                Some elements cannot be modified from this screen because the user is an administrator.
            </div>
        </div>
    </div>
}
<div class="row mb-4">
    <div class="col-xxl-7 col-xl-8 col-lg-9 col-md-12">
        <div class="card border-0 shadow mb-4">
            <div class="card-body">
                @(await Html.PartialAsync("_BackToList", "usersindex"))
                <form asp-route="usersedit" method="post" class="py-4">
                    <div class="row">
                        <div class="col">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="FirstName"></label>
                                @if (Model.IsAdmin)
                                {
                                    <input type="text" class="form-control @Model.HasError("FirstName")" asp-for="FirstName" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control @Model.HasError("FirstName")" asp-for="FirstName" required>
                                }
                                <div class="invalid-feedback">@Model.ErrorMessageFor("FirstName")</div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="mb-3">
                                <label class="form-label raytha-required" asp-for="LastName"></label>
                                @if (Model.IsAdmin)
                                {
                                    <input type="text" class="form-control @Model.HasError("LastName")" asp-for="LastName" readonly>
                                }
                                else
                                {
                                    <input type="text" class="form-control @Model.HasError("LastName")" asp-for="LastName" required>
                                }
                                <div class="invalid-feedback">@Model.ErrorMessageFor("LastName")</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label raytha-required" asp-for="EmailAddress"></label>
                            @if (Model.IsAdmin)
                            {
                                <input type="email" class="form-control @Model.HasError("EmailAddress")" asp-for="EmailAddress" readonly>
                            }
                            else
                            {
                                <input type="email" class="form-control @Model.HasError("EmailAddress")" asp-for="EmailAddress" required>
                            }
                            <div class="invalid-feedback">@Model.ErrorMessageFor("EmailAddress")</div>
                        </div>
                    </div>
                    @if (Model.UserGroups.Any())
                    {
                        <div class="col-lg-12">
                            <div class="mb-3">
                                <span class="h6 fw-bold">User Groups</span>
                            </div>

                            @for (int i = 0; i < Model.UserGroups.Length; i++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input @Model.HasError("UserGroups")" type="checkbox" asp-for="UserGroups[i].Selected">
                                    <label class="form-check-label" asp-for="UserGroups[i].Selected">@Model.UserGroups[i].Label</label>
                                    <input type="hidden" asp-for="UserGroups[i].Id" />
                                    <input type="hidden" asp-for="UserGroups[i].Label" />
                                    @if (i == Model.UserGroups.Length - 1)
                                    {
                                        <div class="invalid-feedback">@Model.ErrorMessageFor("UserGroups")</div>
                                    }
                                </div>
                            }
                        </div>
                    }

                    <input type="hidden" asp-for="Id">
                    <button type="submit" class="btn btn-success mt-4">Save changes</button>  
                </form>
            </div>
        </div>
    </div>
    @(await Html.PartialAsync("_ActionsMenu", new UsersActionsMenu_ViewModel
    {
        Id = Model.Id,
        IsActive = Model.IsActive,
        CurrentUserId = Model.CurrentUserId,
        EmailAndPasswordEnabledForUsers = Model.EmailAndPasswordEnabledForUsers,
        IsAdmin = Model.IsAdmin
    }))
</div>